/**
 * NiFi Rest API
 * The Rest API provides programmatic access to command and control a NiFi instance in real time. Start and                                             stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.
 * <p>
 * OpenAPI spec version: 1.19.1
 * Contact: dev@nifi.apache.org
 * <p>
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 * <p>
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * <p>
 * http://www.apache.org/licenses/LICENSE-2.0
 * <p>
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * ProcessorStatusDTO
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2023-01-11T13:57:19.352+09:00")
public class ProcessorStatusDTO {
    @SerializedName("groupId")
    private String groupId = null;

    @SerializedName("id")
    private String id = null;

    @SerializedName("name")
    private String name = null;

    @SerializedName("type")
    private String type = null;
    @SerializedName("runStatus")
    private RunStatusEnum runStatus = null;
    @SerializedName("statsLastRefreshed")
    private String statsLastRefreshed = null;
    @SerializedName("aggregateSnapshot")
    private ProcessorStatusSnapshotDTO aggregateSnapshot = null;
    @SerializedName("nodeSnapshots")
    private List<NodeProcessorStatusSnapshotDTO> nodeSnapshots = new ArrayList<NodeProcessorStatusSnapshotDTO>();

    public ProcessorStatusDTO groupId(String groupId) {
        this.groupId = groupId;
        return this;
    }

    /**
     * The unique ID of the process group that the Processor belongs to
     * @return groupId
     **/
    @ApiModelProperty(example = "null", value = "The unique ID of the process group that the Processor belongs to")
    public String getGroupId() {
        return groupId;
    }

    public void setGroupId(String groupId) {
        this.groupId = groupId;
    }

    public ProcessorStatusDTO id(String id) {
        this.id = id;
        return this;
    }

    /**
     * The unique ID of the Processor
     * @return id
     **/
    @ApiModelProperty(example = "null", value = "The unique ID of the Processor")
    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public ProcessorStatusDTO name(String name) {
        this.name = name;
        return this;
    }

    /**
     * The name of the Processor
     * @return name
     **/
    @ApiModelProperty(example = "null", value = "The name of the Processor")
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public ProcessorStatusDTO type(String type) {
        this.type = type;
        return this;
    }

    /**
     * The type of the Processor
     * @return type
     **/
    @ApiModelProperty(example = "null", value = "The type of the Processor")
    public String getType() {
        return type;
    }

    public void setType(String type) {
        this.type = type;
    }

    public ProcessorStatusDTO runStatus(RunStatusEnum runStatus) {
        this.runStatus = runStatus;
        return this;
    }

    /**
     * The run status of the Processor
     * @return runStatus
     **/
    @ApiModelProperty(example = "null", value = "The run status of the Processor")
    public RunStatusEnum getRunStatus() {
        return runStatus;
    }

    public void setRunStatus(RunStatusEnum runStatus) {
        this.runStatus = runStatus;
    }

    public ProcessorStatusDTO statsLastRefreshed(String statsLastRefreshed) {
        this.statsLastRefreshed = statsLastRefreshed;
        return this;
    }

    /**
     * The timestamp of when the stats were last refreshed
     * @return statsLastRefreshed
     **/
    @ApiModelProperty(example = "null", value = "The timestamp of when the stats were last refreshed")
    public String getStatsLastRefreshed() {
        return statsLastRefreshed;
    }

    public void setStatsLastRefreshed(String statsLastRefreshed) {
        this.statsLastRefreshed = statsLastRefreshed;
    }

    public ProcessorStatusDTO aggregateSnapshot(ProcessorStatusSnapshotDTO aggregateSnapshot) {
        this.aggregateSnapshot = aggregateSnapshot;
        return this;
    }

    /**
     * A status snapshot that represents the aggregate stats of all nodes in the cluster. If the NiFi instance is a standalone instance, rather than a cluster, this represents the stats of the single instance.
     * @return aggregateSnapshot
     **/
    @ApiModelProperty(example = "null", value = "A status snapshot that represents the aggregate stats of all nodes in the cluster. If the NiFi instance is a standalone instance, rather than a cluster, this represents the stats of the single instance.")
    public ProcessorStatusSnapshotDTO getAggregateSnapshot() {
        return aggregateSnapshot;
    }

    public void setAggregateSnapshot(ProcessorStatusSnapshotDTO aggregateSnapshot) {
        this.aggregateSnapshot = aggregateSnapshot;
    }

    public ProcessorStatusDTO nodeSnapshots(List<NodeProcessorStatusSnapshotDTO> nodeSnapshots) {
        this.nodeSnapshots = nodeSnapshots;
        return this;
    }

    public ProcessorStatusDTO addNodeSnapshotsItem(NodeProcessorStatusSnapshotDTO nodeSnapshotsItem) {
        this.nodeSnapshots.add(nodeSnapshotsItem);
        return this;
    }

    /**
     * A status snapshot for each node in the cluster. If the NiFi instance is a standalone instance, rather than a cluster, this may be null.
     * @return nodeSnapshots
     **/
    @ApiModelProperty(example = "null", value = "A status snapshot for each node in the cluster. If the NiFi instance is a standalone instance, rather than a cluster, this may be null.")
    public List<NodeProcessorStatusSnapshotDTO> getNodeSnapshots() {
        return nodeSnapshots;
    }

    public void setNodeSnapshots(List<NodeProcessorStatusSnapshotDTO> nodeSnapshots) {
        this.nodeSnapshots = nodeSnapshots;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ProcessorStatusDTO processorStatusDTO = (ProcessorStatusDTO) o;
        return Objects.equals(this.groupId, processorStatusDTO.groupId) &&
                Objects.equals(this.id, processorStatusDTO.id) &&
                Objects.equals(this.name, processorStatusDTO.name) &&
                Objects.equals(this.type, processorStatusDTO.type) &&
                Objects.equals(this.runStatus, processorStatusDTO.runStatus) &&
                Objects.equals(this.statsLastRefreshed, processorStatusDTO.statsLastRefreshed) &&
                Objects.equals(this.aggregateSnapshot, processorStatusDTO.aggregateSnapshot) &&
                Objects.equals(this.nodeSnapshots, processorStatusDTO.nodeSnapshots);
    }

    @Override
    public int hashCode() {
        return Objects.hash(groupId, id, name, type, runStatus, statsLastRefreshed, aggregateSnapshot, nodeSnapshots);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ProcessorStatusDTO {\n");

        sb.append("    groupId: ").append(toIndentedString(groupId)).append("\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    type: ").append(toIndentedString(type)).append("\n");
        sb.append("    runStatus: ").append(toIndentedString(runStatus)).append("\n");
        sb.append("    statsLastRefreshed: ").append(toIndentedString(statsLastRefreshed)).append("\n");
        sb.append("    aggregateSnapshot: ").append(toIndentedString(aggregateSnapshot)).append("\n");
        sb.append("    nodeSnapshots: ").append(toIndentedString(nodeSnapshots)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * The run status of the Processor
     */
    public enum RunStatusEnum {
        @SerializedName("Running")
        RUNNING("Running"),

        @SerializedName("Stopped")
        STOPPED("Stopped"),

        @SerializedName("Validating")
        VALIDATING("Validating"),

        @SerializedName("Disabled")
        DISABLED("Disabled"),

        @SerializedName("Invalid")
        INVALID("Invalid");

        private String value;

        RunStatusEnum(String value) {
            this.value = value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }
    }
}

