/**
 * NiFi Rest API
 * The Rest API provides programmatic access to command and control a NiFi instance in real time. Start and                                             stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.
 *
 * OpenAPI spec version: 1.19.1
 * Contact: dev@nifi.apache.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;


/**
 * ReplayLastEventSnapshotDTO
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2023-01-11T13:57:19.352+09:00")
public class ReplayLastEventSnapshotDTO   {
  @SerializedName("eventsReplayed")
  private List<Long> eventsReplayed = new ArrayList<Long>();

  @SerializedName("failureExplanation")
  private String failureExplanation = null;

  @SerializedName("eventAvailable")
  private Boolean eventAvailable = null;

  public ReplayLastEventSnapshotDTO eventsReplayed(List<Long> eventsReplayed) {
    this.eventsReplayed = eventsReplayed;
    return this;
  }

  public ReplayLastEventSnapshotDTO addEventsReplayedItem(Long eventsReplayedItem) {
    this.eventsReplayed.add(eventsReplayedItem);
    return this;
  }

   /**
   * The IDs of the events that were successfully replayed
   * @return eventsReplayed
  **/
  @ApiModelProperty(example = "null", value = "The IDs of the events that were successfully replayed")
  public List<Long> getEventsReplayed() {
    return eventsReplayed;
  }

  public void setEventsReplayed(List<Long> eventsReplayed) {
    this.eventsReplayed = eventsReplayed;
  }

  public ReplayLastEventSnapshotDTO failureExplanation(String failureExplanation) {
    this.failureExplanation = failureExplanation;
    return this;
  }

   /**
   * If unable to replay an event, specifies why the event could not be replayed
   * @return failureExplanation
  **/
  @ApiModelProperty(example = "null", value = "If unable to replay an event, specifies why the event could not be replayed")
  public String getFailureExplanation() {
    return failureExplanation;
  }

  public void setFailureExplanation(String failureExplanation) {
    this.failureExplanation = failureExplanation;
  }

  public ReplayLastEventSnapshotDTO eventAvailable(Boolean eventAvailable) {
    this.eventAvailable = eventAvailable;
    return this;
  }

   /**
   * Whether or not an event was available. This may not be populated if there was a failure.
   * @return eventAvailable
  **/
  @ApiModelProperty(example = "null", value = "Whether or not an event was available. This may not be populated if there was a failure.")
  public Boolean getEventAvailable() {
    return eventAvailable;
  }

  public void setEventAvailable(Boolean eventAvailable) {
    this.eventAvailable = eventAvailable;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReplayLastEventSnapshotDTO replayLastEventSnapshotDTO = (ReplayLastEventSnapshotDTO) o;
    return Objects.equals(this.eventsReplayed, replayLastEventSnapshotDTO.eventsReplayed) &&
        Objects.equals(this.failureExplanation, replayLastEventSnapshotDTO.failureExplanation) &&
        Objects.equals(this.eventAvailable, replayLastEventSnapshotDTO.eventAvailable);
  }

  @Override
  public int hashCode() {
    return Objects.hash(eventsReplayed, failureExplanation, eventAvailable);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReplayLastEventSnapshotDTO {\n");
    
    sb.append("    eventsReplayed: ").append(toIndentedString(eventsReplayed)).append("\n");
    sb.append("    failureExplanation: ").append(toIndentedString(failureExplanation)).append("\n");
    sb.append("    eventAvailable: ").append(toIndentedString(eventAvailable)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

