/**
 * NiFi Rest API
 * The Rest API provides programmatic access to command and control a NiFi instance in real time. Start and                                             stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.
 *
 * OpenAPI spec version: 1.19.1
 * Contact: dev@nifi.apache.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * ParameterGroupConfigurationEntity
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2023-01-11T13:57:19.352+09:00")
public class ParameterGroupConfigurationEntity   {
  @SerializedName("groupName")
  private String groupName = null;

  @SerializedName("parameterContextName")
  private String parameterContextName = null;

  /**
   * Gets or Sets inner
   */
  public enum InnerEnum {
    @SerializedName("SENSITIVE")
    SENSITIVE("SENSITIVE"),
    
    @SerializedName("NON_SENSITIVE")
    NON_SENSITIVE("NON_SENSITIVE");

    private String value;

    InnerEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("parameterSensitivities")
  private Map<String, InnerEnum> parameterSensitivities = new HashMap<String, InnerEnum>();

  @SerializedName("synchronized")
  private Boolean _synchronized = null;

  public ParameterGroupConfigurationEntity groupName(String groupName) {
    this.groupName = groupName;
    return this;
  }

   /**
   * The name of the external parameter group to which the provided parameter names apply.
   * @return groupName
  **/
  @ApiModelProperty(example = "null", value = "The name of the external parameter group to which the provided parameter names apply.")
  public String getGroupName() {
    return groupName;
  }

  public void setGroupName(String groupName) {
    this.groupName = groupName;
  }

  public ParameterGroupConfigurationEntity parameterContextName(String parameterContextName) {
    this.parameterContextName = parameterContextName;
    return this;
  }

   /**
   * The name of the ParameterContext that receives the parameters in this group
   * @return parameterContextName
  **/
  @ApiModelProperty(example = "null", value = "The name of the ParameterContext that receives the parameters in this group")
  public String getParameterContextName() {
    return parameterContextName;
  }

  public void setParameterContextName(String parameterContextName) {
    this.parameterContextName = parameterContextName;
  }

  public ParameterGroupConfigurationEntity parameterSensitivities(Map<String, InnerEnum> parameterSensitivities) {
    this.parameterSensitivities = parameterSensitivities;
    return this;
  }

  public ParameterGroupConfigurationEntity putParameterSensitivitiesItem(String key, InnerEnum parameterSensitivitiesItem) {
    this.parameterSensitivities.put(key, parameterSensitivitiesItem);
    return this;
  }

   /**
   * All fetched parameter names that should be applied.
   * @return parameterSensitivities
  **/
  @ApiModelProperty(example = "null", value = "All fetched parameter names that should be applied.")
  public Map<String, InnerEnum> getParameterSensitivities() {
    return parameterSensitivities;
  }

  public void setParameterSensitivities(Map<String, InnerEnum> parameterSensitivities) {
    this.parameterSensitivities = parameterSensitivities;
  }

  public ParameterGroupConfigurationEntity _synchronized(Boolean _synchronized) {
    this._synchronized = _synchronized;
    return this;
  }

   /**
   * True if this group should be synchronized to a ParameterContext, including creating one if it does not exist.
   * @return _synchronized
  **/
  @ApiModelProperty(example = "null", value = "True if this group should be synchronized to a ParameterContext, including creating one if it does not exist.")
  public Boolean getSynchronized() {
    return _synchronized;
  }

  public void setSynchronized(Boolean _synchronized) {
    this._synchronized = _synchronized;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ParameterGroupConfigurationEntity parameterGroupConfigurationEntity = (ParameterGroupConfigurationEntity) o;
    return Objects.equals(this.groupName, parameterGroupConfigurationEntity.groupName) &&
        Objects.equals(this.parameterContextName, parameterGroupConfigurationEntity.parameterContextName) &&
        Objects.equals(this.parameterSensitivities, parameterGroupConfigurationEntity.parameterSensitivities) &&
        Objects.equals(this._synchronized, parameterGroupConfigurationEntity._synchronized);
  }

  @Override
  public int hashCode() {
    return Objects.hash(groupName, parameterContextName, parameterSensitivities, _synchronized);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ParameterGroupConfigurationEntity {\n");
    
    sb.append("    groupName: ").append(toIndentedString(groupName)).append("\n");
    sb.append("    parameterContextName: ").append(toIndentedString(parameterContextName)).append("\n");
    sb.append("    parameterSensitivities: ").append(toIndentedString(parameterSensitivities)).append("\n");
    sb.append("    _synchronized: ").append(toIndentedString(_synchronized)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

