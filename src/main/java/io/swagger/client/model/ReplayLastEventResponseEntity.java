/**
 * NiFi Rest API
 * The Rest API provides programmatic access to command and control a NiFi instance in real time. Start and                                             stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.
 * <p>
 * OpenAPI spec version: 1.19.1
 * Contact: dev@nifi.apache.org
 * <p>
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 * <p>
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * <p>
 * http://www.apache.org/licenses/LICENSE-2.0
 * <p>
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * ReplayLastEventResponseEntity
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2023-01-11T13:57:19.352+09:00")
public class ReplayLastEventResponseEntity {
    @SerializedName("componentId")
    private String componentId = null;
    @SerializedName("nodes")
    private NodesEnum nodes = null;
    @SerializedName("aggregateSnapshot")
    private ReplayLastEventSnapshotDTO aggregateSnapshot = null;
    @SerializedName("nodeSnapshots")
    private List<NodeReplayLastEventSnapshotDTO> nodeSnapshots = new ArrayList<NodeReplayLastEventSnapshotDTO>();

    public ReplayLastEventResponseEntity componentId(String componentId) {
        this.componentId = componentId;
        return this;
    }

    /**
     * The UUID of the component whose last event should be replayed.
     * @return componentId
     **/
    @ApiModelProperty(example = "null", value = "The UUID of the component whose last event should be replayed.")
    public String getComponentId() {
        return componentId;
    }

    public void setComponentId(String componentId) {
        this.componentId = componentId;
    }

    public ReplayLastEventResponseEntity nodes(NodesEnum nodes) {
        this.nodes = nodes;
        return this;
    }

    /**
     * Which nodes were requested to replay their last provenance event.
     * @return nodes
     **/
    @ApiModelProperty(example = "null", value = "Which nodes were requested to replay their last provenance event.")
    public NodesEnum getNodes() {
        return nodes;
    }

    public void setNodes(NodesEnum nodes) {
        this.nodes = nodes;
    }

    public ReplayLastEventResponseEntity aggregateSnapshot(ReplayLastEventSnapshotDTO aggregateSnapshot) {
        this.aggregateSnapshot = aggregateSnapshot;
        return this;
    }

    /**
     * The aggregate result of all nodes' responses
     * @return aggregateSnapshot
     **/
    @ApiModelProperty(example = "null", value = "The aggregate result of all nodes' responses")
    public ReplayLastEventSnapshotDTO getAggregateSnapshot() {
        return aggregateSnapshot;
    }

    public void setAggregateSnapshot(ReplayLastEventSnapshotDTO aggregateSnapshot) {
        this.aggregateSnapshot = aggregateSnapshot;
    }

    public ReplayLastEventResponseEntity nodeSnapshots(List<NodeReplayLastEventSnapshotDTO> nodeSnapshots) {
        this.nodeSnapshots = nodeSnapshots;
        return this;
    }

    public ReplayLastEventResponseEntity addNodeSnapshotsItem(NodeReplayLastEventSnapshotDTO nodeSnapshotsItem) {
        this.nodeSnapshots.add(nodeSnapshotsItem);
        return this;
    }

    /**
     * The node-wise results
     * @return nodeSnapshots
     **/
    @ApiModelProperty(example = "null", value = "The node-wise results")
    public List<NodeReplayLastEventSnapshotDTO> getNodeSnapshots() {
        return nodeSnapshots;
    }

    public void setNodeSnapshots(List<NodeReplayLastEventSnapshotDTO> nodeSnapshots) {
        this.nodeSnapshots = nodeSnapshots;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ReplayLastEventResponseEntity replayLastEventResponseEntity = (ReplayLastEventResponseEntity) o;
        return Objects.equals(this.componentId, replayLastEventResponseEntity.componentId) &&
                Objects.equals(this.nodes, replayLastEventResponseEntity.nodes) &&
                Objects.equals(this.aggregateSnapshot, replayLastEventResponseEntity.aggregateSnapshot) &&
                Objects.equals(this.nodeSnapshots, replayLastEventResponseEntity.nodeSnapshots);
    }

    @Override
    public int hashCode() {
        return Objects.hash(componentId, nodes, aggregateSnapshot, nodeSnapshots);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ReplayLastEventResponseEntity {\n");

        sb.append("    componentId: ").append(toIndentedString(componentId)).append("\n");
        sb.append("    nodes: ").append(toIndentedString(nodes)).append("\n");
        sb.append("    aggregateSnapshot: ").append(toIndentedString(aggregateSnapshot)).append("\n");
        sb.append("    nodeSnapshots: ").append(toIndentedString(nodeSnapshots)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Which nodes were requested to replay their last provenance event.
     */
    public enum NodesEnum {
        @SerializedName("ALL")
        ALL("ALL"),

        @SerializedName("PRIMARY")
        PRIMARY("PRIMARY");

        private String value;

        NodesEnum(String value) {
            this.value = value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }
    }
}

