/**
 * NiFi Rest API
 * The Rest API provides programmatic access to command and control a NiFi instance in real time. Start and                                             stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.
 *
 * OpenAPI spec version: 1.19.1
 * Contact: dev@nifi.apache.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;


/**
 * PropertyDependency
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2023-01-11T13:57:19.352+09:00")
public class PropertyDependency   {
  @SerializedName("propertyName")
  private String propertyName = null;

  @SerializedName("propertyDisplayName")
  private String propertyDisplayName = null;

  @SerializedName("dependentValues")
  private List<String> dependentValues = new ArrayList<String>();

  public PropertyDependency propertyName(String propertyName) {
    this.propertyName = propertyName;
    return this;
  }

   /**
   * The name of the property that is depended upon
   * @return propertyName
  **/
  @ApiModelProperty(example = "null", value = "The name of the property that is depended upon")
  public String getPropertyName() {
    return propertyName;
  }

  public void setPropertyName(String propertyName) {
    this.propertyName = propertyName;
  }

  public PropertyDependency propertyDisplayName(String propertyDisplayName) {
    this.propertyDisplayName = propertyDisplayName;
    return this;
  }

   /**
   * The name of the property that is depended upon
   * @return propertyDisplayName
  **/
  @ApiModelProperty(example = "null", value = "The name of the property that is depended upon")
  public String getPropertyDisplayName() {
    return propertyDisplayName;
  }

  public void setPropertyDisplayName(String propertyDisplayName) {
    this.propertyDisplayName = propertyDisplayName;
  }

  public PropertyDependency dependentValues(List<String> dependentValues) {
    this.dependentValues = dependentValues;
    return this;
  }

  public PropertyDependency addDependentValuesItem(String dependentValuesItem) {
    this.dependentValues.add(dependentValuesItem);
    return this;
  }

   /**
   * The values that satisfy the dependency
   * @return dependentValues
  **/
  @ApiModelProperty(example = "null", value = "The values that satisfy the dependency")
  public List<String> getDependentValues() {
    return dependentValues;
  }

  public void setDependentValues(List<String> dependentValues) {
    this.dependentValues = dependentValues;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PropertyDependency propertyDependency = (PropertyDependency) o;
    return Objects.equals(this.propertyName, propertyDependency.propertyName) &&
        Objects.equals(this.propertyDisplayName, propertyDependency.propertyDisplayName) &&
        Objects.equals(this.dependentValues, propertyDependency.dependentValues);
  }

  @Override
  public int hashCode() {
    return Objects.hash(propertyName, propertyDisplayName, dependentValues);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PropertyDependency {\n");
    
    sb.append("    propertyName: ").append(toIndentedString(propertyName)).append("\n");
    sb.append("    propertyDisplayName: ").append(toIndentedString(propertyDisplayName)).append("\n");
    sb.append("    dependentValues: ").append(toIndentedString(dependentValues)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

